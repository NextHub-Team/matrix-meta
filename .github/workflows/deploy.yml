name: deploy Django Docker Compose on server

on:
  push:
    branches:
      - main

jobs:
  test-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Create .env file with secrets
        run: |
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" > .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      - name: Build and Run Tests with Docker Compose
        run: |
          docker-compose -f ./docker/docker-compose-web.yml up --build -d

      - name: Stop Docker Compose without removing volumes
        run: |
          docker-compose -f ./docker/docker-compose-web.yml down

  deploy-on-server:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{secrets.SERVER_PORT}}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            echo "Starting deployment..."
            cd ${{ secrets.PROJECT_PATH }}
            docker-compose -f docker/docker-compose-web.yml down
            
            # Pull latest changes and restart services
            git pull
            docker-compose -f docker/docker-compose-web.yml up --build -d
            echo "Deployment completed successfully."