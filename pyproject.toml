[tool.poetry]
name = "matrix-meta"
version = "0.1.0"
description = "Matrix-Meta is a suite of services designed to integrate the Matrix protocol, enabling seamless interoperability."
authors = ["amirtaherkhani <amirtaherkhani@outlook.com>", "parhamya1 <parham.ya1@gmail.com>"]
license = "GPL-3.0"
readme = "README.md"
package-mode = false
packages = [
    { include = "scripts" }
]



[tool.poetry.dependencies]
python = "^3.10"
django = "5.1.3"
django-unfold = "^0.42.0"
typer = {extras = ["all"], version = "^0.13.1"}
dynaconf = {extras = ["django"], version = "^3.2.6"}
djangorestframework = "^3.15.2"
wrapt = "^1.17.0"
classy-decorators = "^1.2.0"
rich = "^13.9.4"
django-redis = "^5.4.0"
psycopg2-binary = "^2.9.10"
cleo = "^2.1.0"
poetry = "^1.8.4"
emoji = "^2.14.0"
inquirerpy = "^0.3.4"


[tool.poetry.group.dev.dependencies]
commitizen = "^4.0.0"
pre-commit = "^4.0.1"
pylint-django = "^2.6.1"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
apps = "scripts.main:app" 
django = "scripts.commands.django:app" 
git = "scripts.commands.git:app" 

[tool.poetry-dynamic-versioning]
enable = false  # Enables dynamic versioning # its work when using build command in package mode 
pattern = "v(?P<version>.*)"  # Matches tags starting with "v", e.g., "v1.2.0"
dirty = false  # Optionally append ".dirty" if the working tree is modified



